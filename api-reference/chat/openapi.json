{
  "openapi": "3.0.1",
  "info": {
    "title": "PolyAI Chat API Documentation",
    "description": "Schema for managing web chat operations in PolyAI.",
    "license": {
      "name": "MIT"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://api.us-1.platform.polyai.app",
      "description": "US base url"
    },
    {
      "url": "https://api.uk-1.platform.polyai.app",
      "description": "UK base url"
    },
    {
      "url": "https://api.euw-1.platform.polyai.app",
      "description": "EU-West base url"
    }
  ],
  "security": {
    "PolyAPIKey": {
      "type": "apiKey",
      "name": "X-Api-Key",
      "in": "header",
      "description": "API keys must be requested from PolyAI"
    }
  },
  "paths": {
    "/v1/{account_id}/{project_id}/chat/create": {
      "post": {
        "summary": "Create a chat",
        "description": "Initiate a new web chat session.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Account ID in the format `ACCOUNT-xxxxxxxx`. Uniquely identifies your PolyAI account."
          },
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Project ID in the format `PROJECT-xxxxxxxx`. Combined with the `account_id`, this uniquely identifies a PolyAI project."
          },
          {
            "name": "X-Token",
            "in": "header",
            "required": true,
            "description": "A unique identifier for the agent to create a chat with. Supplied by PolyAI.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Chat session created successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChatResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      }
    },
    "/v1/{account_id}/{project_id}/chat/respond": {
      "post": {
        "summary": "Respond to a chat",
        "description": "Send a message in an existing chat session.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Account ID in the format `ACCOUNT-xxxxxxxx`. Uniquely identifies your PolyAI account."
          },
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Project ID in the format `PROJECT-xxxxxxxx`. Combined with the `account_id`, this uniquely identifies a PolyAI project."
          },
          {
            "name": "X-Token",
            "in": "header",
            "required": true,
            "description": "A unique identifier for the agent to create a chat with. Supplied by PolyAI.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "conversation_id": {
                    "type": "string",
                    "description": "A unique identifier for the chat session. Returned from the `create` endpoint and required to interact with the chat.",
                    "example": "WEBCHAT_18bd8253-4019-4ba7-83b5-5ed602d5d84a"
                  },
                  "message": {
                    "type": "string",
                    "description": "The content of the chat message."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Message sent successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChatResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    }
  },
  "components": {
    "responses": {
      "Unauthorized": {
        "description": "Unauthorized",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "BadRequest": {
        "description": "Bad Request",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "NotFound": {
        "description": "Not Found",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      }
    },
    "schemas": {
      "ChatResponse": {
        "type": "object",
        "properties": {
          "conversation_id": {
            "type": "string"
          },
          "response": {
            "type": "string"
          },
          "end_conversation": {
            "type": "boolean"
          }
        },
        "required": ["conversation_id", "response"]
      },
      "Error": {
        "type": "object",
        "properties": {
          "error_message": {
            "description": "A description of the error encountered.",
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "ApiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "x-api-key"
      }
    }
  }
}
